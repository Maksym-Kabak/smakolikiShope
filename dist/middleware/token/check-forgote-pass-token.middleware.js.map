{"version":3,"file":"check-forgote-pass-token.middleware.js","sourceRoot":"","sources":["../../../src/middleware/token/check-forgote-pass-token.middleware.ts"],"names":[],"mappings":";;;AACA,+CAAwF;AACxF,yCAAwD;AACxD,8CAAgD;AAEhD,2CAA+C;AAElC,QAAA,8BAA8B,GAAG,KAAK,EAAE,GAAqB,EAAE,GAAa,EAAE,IAAkB,EAAiB,EAAE;IAC9H,MAAM,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,8BAAkB,CAAC,aAAa,CAAC,CAAC;IAExD,IAAI,CAAC,KAAK,EAAE;QACV,OAAO,IAAI,CAAC,IAAI,qBAAY,CAAC,mCAAuB,CAAC,WAAW,EAAE,qBAAY,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC;KAC/G;IACD,MAAM,0BAAgB,CAAC,sBAAU,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;IAE1D,MAAM,WAAW,GAAG,MAAM,kBAAW,CAAC,qBAAqB,CAAC,sBAAU,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;IAE/F,IAAI,CAAC,WAAW,EAAE;QAChB,OAAO,IAAI,CAAC,IAAI,qBAAY,CAAC,mCAAuB,CAAC,SAAS,EAAE,qBAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;KAClG;IAED,GAAG,CAAC,IAAI,GAAG,WAAW,CAAC;IAEvB,IAAI,EAAE,CAAC;AACT,CAAC,CAAC","sourcesContent":["import {NextFunction, Response} from 'express';\r\nimport {ActionEnum, RequestHeadersEnum, ResponseStatusCodesEnum} from '../../constants';\r\nimport {customErrors, ErrorHandler} from '../../errors';\r\nimport {userService} from '../../services/user';\r\nimport {IRequestExtended} from '../../models';\r\nimport {tokinVerificator} from '../../helpers';\r\n\r\nexport const checkForgotPassTokenMiddleware = async (req: IRequestExtended, res: Response, next: NextFunction): Promise<void> => {\r\n  const token = req.get(RequestHeadersEnum.AUTHORIZATION);\r\n\r\n  if (!token) {\r\n    return next(new ErrorHandler(ResponseStatusCodesEnum.BAD_REQUEST, customErrors.BAD_REQUEST_NO_TOKEN.message));\r\n  }\r\n  await tokinVerificator(ActionEnum.FORGOT_PASSWORD, token);\r\n\r\n  const userByToken = await userService.findUserByActionToken(ActionEnum.FORGOT_PASSWORD, token);\r\n\r\n  if (!userByToken) {\r\n    return next(new ErrorHandler(ResponseStatusCodesEnum.NOT_FOUND, customErrors.NOT_FOUND.message));\r\n  }\r\n\r\n  req.user = userByToken;\r\n\r\n  next();\r\n};\r\n"]}
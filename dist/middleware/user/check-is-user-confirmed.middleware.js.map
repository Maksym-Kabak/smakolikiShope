{"version":3,"file":"check-is-user-confirmed.middleware.js","sourceRoot":"","sources":["../../../src/middleware/user/check-is-user-confirmed.middleware.ts"],"names":[],"mappings":";;;AAEA,yCAAwD;AACxD,+CAAwE;AAG3D,QAAA,8BAA8B,GACzC,CAAC,GAAqB,EAAE,GAAa,EAAE,IAAkB,EAAuB,EAAE;IAChF,MAAM,EAAC,MAAM,EAAC,GAAG,GAAG,CAAC,IAAa,CAAC;IAEnC,IAAI,MAAM,KAAK,0BAAc,CAAC,SAAS,EAAE;QACvC,OAAO,IAAI,CAAC,IAAI,qBAAY,CAC1B,mCAAuB,CAAC,SAAS,EACjC,qBAAY,CAAC,4BAA4B,CAAC,OAAO,EACjD,qBAAY,CAAC,4BAA4B,CAAC,IAAI,CAAC,CAAC,CAAC;KACpD;IACD,IAAI,EAAE,CAAC;AACT,CAAC,CAAC","sourcesContent":["import {NextFunction, Response} from 'express';\r\n\r\nimport {customErrors, ErrorHandler} from '../../errors';\r\nimport {ResponseStatusCodesEnum, UserStatusEnum} from '../../constants';\r\nimport {IRequestExtended, IUser} from '../../models';\r\n\r\nexport const checkIsUserConfirmedMiddleware =\r\n  (req: IRequestExtended, res: Response, next: NextFunction): void | NextFunction => {\r\n    const {status} = req.user as IUser;\r\n\r\n    if (status !== UserStatusEnum.CONFIRMED) {\r\n      return next(new ErrorHandler(\r\n        ResponseStatusCodesEnum.FORBIDDEN,\r\n        customErrors.FORBIDDEN_USER_NOT_CONFIRMED.message,\r\n        customErrors.FORBIDDEN_USER_NOT_CONFIRMED.code));\r\n    }\r\n    next();\r\n  };\r\n"]}